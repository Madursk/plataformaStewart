

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Mar 23 22:07:22 2018

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19  0000                     _LATC1	set	31833
    20  0000                     _LATC2	set	31834
    21  0000                     _RC1	set	31761
    22  0000                     _RC2	set	31762
    23  0000                     _TRISC1	set	31905
    24  0000                     _TRISC2	set	31906
    25  0000                     _TRISD2	set	31914
    26  0000                     _TRISD3	set	31915
    27  0000                     _CCP1CON	set	4029
    28  0000                     _CCP2CON	set	4026
    29  0000                     _CCPR1L	set	4030
    30  0000                     _CCPR2L	set	4027
    31  0000                     _PR2	set	4043
    32  0000                     _SSPADD	set	4040
    33  0000                     _SSPBUF	set	4041
    34  0000                     _SSPCON	set	4038
    35  0000                     _T2CON	set	4042
    36  0000                     _BF	set	32312
    37  0000                     _CKP	set	32308
    38  0000                     _IPEN	set	32391
    39  0000                     _SSPIE	set	31979
    40  0000                     _SSPIF	set	31987
    41  0000                     _SSPIP	set	31995
    42  0000                     _SSPOV	set	32310
    43  0000                     _WCOL	set	32311
    44  0000                     _GIE	set	32663
    45                           
    46                           ; #config settings
    47  0000                     
    48                           	psect	cinit
    49  000190                     __pcinit:
    50                           	opt stack 0
    51  000190                     start_initialization:
    52                           	opt stack 0
    53  000190                     __initialization:
    54                           	opt stack 0
    55                           
    56                           ; Clear objects allocated to COMRAM (2 bytes)
    57  000190  6A19               	clrf	(__pbssCOMRAM+1)& (0+255),c
    58  000192  6A18               	clrf	__pbssCOMRAM& (0+255),c
    59  000194                     end_of_initialization:
    60                           	opt stack 0
    61  000194                     __end_of__initialization:
    62                           	opt stack 0
    63  000194  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    64  000196  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    65  000198  0100               	movlb	0
    66  00019A  EFB3  F000         	goto	_main	;jump to C main() function
    67                           
    68                           	psect	bssCOMRAM
    69  000018                     __pbssCOMRAM:
    70                           	opt stack 0
    71  000018                     _GPREG:
    72                           	opt stack 0
    73  000018                     	ds	1
    74  000019                     _i2cData:
    75                           	opt stack 0
    76  000019                     	ds	1
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	opt stack 0
    81  000001                     ??_ISR_high:
    82  000001                     
    83                           ; 1 bytes @ 0x0
    84  000001                     	ds	14
    85  00000F                     ?___awdiv:
    86                           	opt stack 0
    87  00000F                     ___awdiv@dividend:
    88                           	opt stack 0
    89                           
    90                           ; 2 bytes @ 0xE
    91  00000F                     	ds	2
    92  000011                     ___awdiv@divisor:
    93                           	opt stack 0
    94                           
    95                           ; 2 bytes @ 0x10
    96  000011                     	ds	2
    97  000013                     ___awdiv@counter:
    98                           	opt stack 0
    99                           
   100                           ; 1 bytes @ 0x12
   101  000013                     	ds	1
   102  000014                     ___awdiv@sign:
   103                           	opt stack 0
   104                           
   105                           ; 1 bytes @ 0x13
   106  000014                     	ds	1
   107  000015                     ___awdiv@quotient:
   108                           	opt stack 0
   109                           
   110                           ; 2 bytes @ 0x14
   111  000015                     	ds	2
   112  000017                     write_PWMF@dutyCycle:
   113                           	opt stack 0
   114                           
   115                           ; 1 bytes @ 0x16
   116  000017                     	ds	1
   117  000018                     
   118                           ; 1 bytes @ 0x17
   119 ;;
   120 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   121 ;;
   122 ;; *************** function _main *****************
   123 ;; Defined at:
   124 ;;		line 70 in file "Main/Main.c"
   125 ;; Parameters:    Size  Location     Type
   126 ;;		None
   127 ;; Auto vars:     Size  Location     Type
   128 ;;		None
   129 ;; Return value:  Size  Location     Type
   130 ;;                  1    wreg      void 
   131 ;; Registers used:
   132 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   133 ;; Tracked objects:
   134 ;;		On entry : 0/0
   135 ;;		On exit  : 0/0
   136 ;;		Unchanged: 0/0
   137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   138 ;;      Params:         0       0       0       0
   139 ;;      Locals:         0       0       0       0
   140 ;;      Temps:          0       0       0       0
   141 ;;      Totals:         0       0       0       0
   142 ;;Total ram usage:        0 bytes
   143 ;; Hardware stack levels required when called:    3
   144 ;; This function calls:
   145 ;;		_enable_Interrupts
   146 ;;		_init_GPIO
   147 ;;		_init_PERIPH
   148 ;;		_routineSelector
   149 ;;		_write_PWMF
   150 ;; This function is called by:
   151 ;;		Startup code after reset
   152 ;; This function uses a non-reentrant model
   153 ;;
   154                           
   155                           	psect	text0
   156  000166                     __ptext0:
   157                           	opt stack 0
   158  000166                     _main:
   159                           	opt stack 28
   160                           
   161                           ;Main.c: 72: init_GPIO();
   162                           
   163                           ;incstack = 0
   164  000166  ECBF  F000         	call	_init_GPIO	;wreg free
   165                           
   166                           ;Main.c: 73: init_PERIPH();
   167  00016A  ECCF  F000         	call	_init_PERIPH	;wreg free
   168                           
   169                           ;Main.c: 74: enable_Interrupts();
   170  00016E  ECD6  F000         	call	_enable_Interrupts	;wreg free
   171                           
   172                           ;Main.c: 75: write_PWMF(50);
   173  000172  0E32               	movlw	50
   174  000174  EC9E  F000         	call	_write_PWMF
   175  000178                     l851:
   176                           
   177                           ;Main.c: 78: {
   178                           ;Main.c: 79: routineSelector();
   179  000178  ECDB  F000         	call	_routineSelector	;wreg free
   180  00017C  D7FD               	goto	l851
   181  00017E                     __end_of_main:
   182                           	opt stack 0
   183                           
   184 ;; *************** function _write_PWMF *****************
   185 ;; Defined at:
   186 ;;		line 127 in file "Main/Main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;  dutyCycle       1    wreg     unsigned char 
   189 ;; Auto vars:     Size  Location     Type
   190 ;;  dutyCycle       1   22[COMRAM] unsigned char 
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   200 ;;      Params:         0       0       0       0
   201 ;;      Locals:         1       0       0       0
   202 ;;      Temps:          0       0       0       0
   203 ;;      Totals:         1       0       0       0
   204 ;;Total ram usage:        1 bytes
   205 ;; Hardware stack levels used:    1
   206 ;; Hardware stack levels required when called:    2
   207 ;; This function calls:
   208 ;;		___awdiv
   209 ;; This function is called by:
   210 ;;		_main
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           	psect	text1
   215  00013C                     __ptext1:
   216                           	opt stack 0
   217  00013C                     _write_PWMF:
   218                           	opt stack 28
   219                           
   220                           ;incstack = 0
   221                           ;write_PWMF@dutyCycle stored from wreg
   222  00013C  6E17               	movwf	write_PWMF@dutyCycle,c
   223                           
   224                           ;Main.c: 129: TRISC1 = 1;
   225  00013E  8294               	bsf	3988,1,c	;volatile
   226  000140  F000               	nop		;# 
   227                           
   228                           ;Main.c: 131: TRISC2 = 0;
   229  000142  9494               	bcf	3988,2,c	;volatile
   230                           
   231                           ;Main.c: 132: PR2 = 125;
   232  000144  0E7D               	movlw	125
   233  000146  6ECB               	movwf	4043,c	;volatile
   234                           
   235                           ;Main.c: 133: CCPR1L = dutyCycle*125/100;
   236  000148  5017               	movf	write_PWMF@dutyCycle,w,c
   237  00014A  0D7D               	mullw	125
   238  00014C  CFF3 F00F          	movff	prodl,___awdiv@dividend
   239  000150  CFF4 F010          	movff	prodh,___awdiv@dividend+1
   240  000154  0E00               	movlw	0
   241  000156  6E12               	movwf	___awdiv@divisor+1,c
   242  000158  0E64               	movlw	100
   243  00015A  6E11               	movwf	___awdiv@divisor,c
   244  00015C  EC5C  F000         	call	___awdiv	;wreg free
   245  000160  500F               	movf	?___awdiv,w,c
   246  000162  6EBE               	movwf	4030,c	;volatile
   247  000164  0012               	return		;funcret
   248  000166                     __end_of_write_PWMF:
   249                           	opt stack 0
   250                           prodh	equ	0xFF4
   251                           prodl	equ	0xFF3
   252                           
   253 ;; *************** function ___awdiv *****************
   254 ;; Defined at:
   255 ;;		line 8 in file "C:\Microchip\xc8\v1.36\sources\common\awdiv.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;  dividend        2   14[COMRAM] int 
   258 ;;  divisor         2   16[COMRAM] int 
   259 ;; Auto vars:     Size  Location     Type
   260 ;;  quotient        2   20[COMRAM] int 
   261 ;;  sign            1   19[COMRAM] unsigned char 
   262 ;;  counter         1   18[COMRAM] unsigned char 
   263 ;; Return value:  Size  Location     Type
   264 ;;                  2   14[COMRAM] int 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   272 ;;      Params:         4       0       0       0
   273 ;;      Locals:         4       0       0       0
   274 ;;      Temps:          0       0       0       0
   275 ;;      Totals:         8       0       0       0
   276 ;;Total ram usage:        8 bytes
   277 ;; Hardware stack levels used:    1
   278 ;; Hardware stack levels required when called:    1
   279 ;; This function calls:
   280 ;;		Nothing
   281 ;; This function is called by:
   282 ;;		_write_PWMF
   283 ;;		_write_PWMR
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text2
   288  0000B8                     __ptext2:
   289                           	opt stack 0
   290  0000B8                     ___awdiv:
   291                           	opt stack 28
   292                           
   293                           ;incstack = 0
   294  0000B8  0E00               	movlw	0
   295  0000BA  6E14               	movwf	___awdiv@sign,c
   296  0000BC  AE12               	btfss	___awdiv@divisor+1,7,c
   297  0000BE  D006               	goto	l801
   298  0000C0  6C11               	negf	___awdiv@divisor,c
   299  0000C2  1E12               	comf	___awdiv@divisor+1,f,c
   300  0000C4  B0D8               	btfsc	status,0,c
   301  0000C6  2A12               	incf	___awdiv@divisor+1,f,c
   302  0000C8  0E01               	movlw	1
   303  0000CA  6E14               	movwf	___awdiv@sign,c
   304  0000CC                     l801:
   305  0000CC  AE10               	btfss	___awdiv@dividend+1,7,c
   306  0000CE  D006               	goto	l807
   307  0000D0  6C0F               	negf	___awdiv@dividend,c
   308  0000D2  1E10               	comf	___awdiv@dividend+1,f,c
   309  0000D4  B0D8               	btfsc	status,0,c
   310  0000D6  2A10               	incf	___awdiv@dividend+1,f,c
   311  0000D8  0E01               	movlw	1
   312  0000DA  1A14               	xorwf	___awdiv@sign,f,c
   313  0000DC                     l807:
   314  0000DC  0E00               	movlw	0
   315  0000DE  6E16               	movwf	___awdiv@quotient+1,c
   316  0000E0  0E00               	movlw	0
   317  0000E2  6E15               	movwf	___awdiv@quotient,c
   318  0000E4  5011               	movf	___awdiv@divisor,w,c
   319  0000E6  1012               	iorwf	___awdiv@divisor+1,w,c
   320  0000E8  B4D8               	btfsc	status,2,c
   321  0000EA  D01C               	goto	l829
   322  0000EC  0E01               	movlw	1
   323  0000EE  6E13               	movwf	___awdiv@counter,c
   324  0000F0  D004               	goto	l815
   325  0000F2                     l813:
   326  0000F2  90D8               	bcf	status,0,c
   327  0000F4  3611               	rlcf	___awdiv@divisor,f,c
   328  0000F6  3612               	rlcf	___awdiv@divisor+1,f,c
   329  0000F8  2A13               	incf	___awdiv@counter,f,c
   330  0000FA                     l815:
   331  0000FA  AE12               	btfss	___awdiv@divisor+1,7,c
   332  0000FC  D7FA               	goto	l813
   333  0000FE                     l817:
   334  0000FE  90D8               	bcf	status,0,c
   335  000100  3615               	rlcf	___awdiv@quotient,f,c
   336  000102  3616               	rlcf	___awdiv@quotient+1,f,c
   337  000104  5011               	movf	___awdiv@divisor,w,c
   338  000106  5C0F               	subwf	___awdiv@dividend,w,c
   339  000108  5012               	movf	___awdiv@divisor+1,w,c
   340  00010A  5810               	subwfb	___awdiv@dividend+1,w,c
   341  00010C  A0D8               	btfss	status,0,c
   342  00010E  D005               	goto	l825
   343  000110  5011               	movf	___awdiv@divisor,w,c
   344  000112  5E0F               	subwf	___awdiv@dividend,f,c
   345  000114  5012               	movf	___awdiv@divisor+1,w,c
   346  000116  5A10               	subwfb	___awdiv@dividend+1,f,c
   347  000118  8015               	bsf	___awdiv@quotient,0,c
   348  00011A                     l825:
   349  00011A  90D8               	bcf	status,0,c
   350  00011C  3212               	rrcf	___awdiv@divisor+1,f,c
   351  00011E  3211               	rrcf	___awdiv@divisor,f,c
   352  000120  2E13               	decfsz	___awdiv@counter,f,c
   353  000122  D7ED               	goto	l817
   354  000124                     l829:
   355  000124  5014               	movf	___awdiv@sign,w,c
   356  000126  B4D8               	btfsc	status,2,c
   357  000128  D004               	goto	l833
   358  00012A  6C15               	negf	___awdiv@quotient,c
   359  00012C  1E16               	comf	___awdiv@quotient+1,f,c
   360  00012E  B0D8               	btfsc	status,0,c
   361  000130  2A16               	incf	___awdiv@quotient+1,f,c
   362  000132                     l833:
   363  000132  C015  F00F         	movff	___awdiv@quotient,?___awdiv
   364  000136  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
   365  00013A  0012               	return	
   366  00013C                     __end_of___awdiv:
   367                           	opt stack 0
   368                           prodh	equ	0xFF4
   369                           prodl	equ	0xFF3
   370                           status	equ	0xFD8
   371                           
   372 ;; *************** function _routineSelector *****************
   373 ;; Defined at:
   374 ;;		line 84 in file "Main/Main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		None
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   388 ;;      Params:         0       0       0       0
   389 ;;      Locals:         0       0       0       0
   390 ;;      Temps:          0       0       0       0
   391 ;;      Totals:         0       0       0       0
   392 ;;Total ram usage:        0 bytes
   393 ;; Hardware stack levels used:    1
   394 ;; Hardware stack levels required when called:    1
   395 ;; This function calls:
   396 ;;		Nothing
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text3
   403  0001B6                     __ptext3:
   404                           	opt stack 0
   405  0001B6                     _routineSelector:
   406                           	opt stack 29
   407                           
   408                           ;Main.c: 86: if(GPREG.I2CDAT == 1)
   409                           
   410                           ;incstack = 0
   411  0001B6  A218               	btfss	_GPREG,1,c
   412  0001B8  0012               	return	
   413                           
   414                           ;Main.c: 87: {
   415                           ;Main.c: 90: GPREG.I2CDAT = 0;
   416  0001BA  9218               	bcf	_GPREG,1,c
   417  0001BC  0012               	return	
   418  0001BE                     __end_of_routineSelector:
   419                           	opt stack 0
   420                           prodh	equ	0xFF4
   421                           prodl	equ	0xFF3
   422                           status	equ	0xFD8
   423                           
   424 ;; *************** function _init_PERIPH *****************
   425 ;; Defined at:
   426 ;;		line 115 in file "Main/Main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   440 ;;      Params:         0       0       0       0
   441 ;;      Locals:         0       0       0       0
   442 ;;      Temps:          0       0       0       0
   443 ;;      Totals:         0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    1
   447 ;; This function calls:
   448 ;;		Nothing
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text4
   455  00019E                     __ptext4:
   456                           	opt stack 0
   457  00019E                     _init_PERIPH:
   458                           	opt stack 29
   459                           
   460                           ;Main.c: 119: CCP1CON = (0x20 & 0b00000000) | (0x10 &0b00000000)
   461                           ;Main.c: 120: | 0xF;
   462                           
   463                           ;incstack = 0
   464  00019E  0E0F               	movlw	15
   465  0001A0  6EBD               	movwf	4029,c	;volatile
   466                           
   467                           ;Main.c: 121: T2CON = 0b00000110;
   468  0001A2  0E06               	movlw	6
   469  0001A4  6ECA               	movwf	4042,c	;volatile
   470                           
   471                           ;Main.c: 122: CCP2CON = 0b00001100;
   472  0001A6  0E0C               	movlw	12
   473  0001A8  6EBA               	movwf	4026,c	;volatile
   474  0001AA  0012               	return		;funcret
   475  0001AC                     __end_of_init_PERIPH:
   476                           	opt stack 0
   477                           prodh	equ	0xFF4
   478                           prodl	equ	0xFF3
   479                           status	equ	0xFD8
   480                           
   481 ;; *************** function _init_GPIO *****************
   482 ;; Defined at:
   483 ;;		line 103 in file "Main/Main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		None
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   497 ;;      Params:         0       0       0       0
   498 ;;      Locals:         0       0       0       0
   499 ;;      Temps:          0       0       0       0
   500 ;;      Totals:         0       0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; Hardware stack levels required when called:    1
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text5
   512  00017E                     __ptext5:
   513                           	opt stack 0
   514  00017E                     _init_GPIO:
   515                           	opt stack 29
   516                           
   517                           ;Main.c: 105: LATC2 = 0;
   518                           
   519                           ;incstack = 0
   520  00017E  948B               	bcf	3979,2,c	;volatile
   521                           
   522                           ;Main.c: 106: RC2 = 0;
   523  000180  9482               	bcf	3970,2,c	;volatile
   524                           
   525                           ;Main.c: 107: LATC1 = 0;
   526  000182  928B               	bcf	3979,1,c	;volatile
   527                           
   528                           ;Main.c: 108: RC1 = 0;
   529  000184  9282               	bcf	3970,1,c	;volatile
   530                           
   531                           ;Main.c: 109: TRISD3 = 1;
   532  000186  8695               	bsf	3989,3,c	;volatile
   533                           
   534                           ;Main.c: 110: TRISD2 = 1;
   535  000188  8495               	bsf	3989,2,c	;volatile
   536                           
   537                           ;Main.c: 111: TRISC2 = 0;
   538  00018A  9494               	bcf	3988,2,c	;volatile
   539                           
   540                           ;Main.c: 112: TRISC1 = 0;
   541  00018C  9294               	bcf	3988,1,c	;volatile
   542  00018E  0012               	return		;funcret
   543  000190                     __end_of_init_GPIO:
   544                           	opt stack 0
   545                           prodh	equ	0xFF4
   546                           prodl	equ	0xFF3
   547                           status	equ	0xFD8
   548                           
   549 ;; *************** function _enable_Interrupts *****************
   550 ;; Defined at:
   551 ;;		line 149 in file "Main/Main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		None
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   565 ;;      Params:         0       0       0       0
   566 ;;      Locals:         0       0       0       0
   567 ;;      Temps:          0       0       0       0
   568 ;;      Totals:         0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text6
   580  0001AC                     __ptext6:
   581                           	opt stack 0
   582  0001AC                     _enable_Interrupts:
   583                           	opt stack 29
   584                           
   585                           ;Main.c: 151: SSPIE = 1;
   586                           
   587                           ;incstack = 0
   588  0001AC  869D               	bsf	3997,3,c	;volatile
   589                           
   590                           ;Main.c: 152: SSPIP = 1;
   591  0001AE  869F               	bsf	3999,3,c	;volatile
   592                           
   593                           ;Main.c: 153: IPEN=1;
   594  0001B0  8ED0               	bsf	4048,7,c	;volatile
   595                           
   596                           ;Main.c: 154: GIE = 1;
   597  0001B2  8EF2               	bsf	intcon,7,c	;volatile
   598  0001B4  0012               	return		;funcret
   599  0001B6                     __end_of_enable_Interrupts:
   600                           	opt stack 0
   601                           prodh	equ	0xFF4
   602                           prodl	equ	0xFF3
   603                           intcon	equ	0xFF2
   604                           status	equ	0xFD8
   605                           
   606 ;; *************** function _ISR_high *****************
   607 ;; Defined at:
   608 ;;		line 38 in file "Main/Main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   622 ;;      Params:         0       0       0       0
   623 ;;      Locals:         0       0       0       0
   624 ;;      Temps:         14       0       0       0
   625 ;;      Totals:        14       0       0       0
   626 ;;Total ram usage:       14 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		Interrupt level 2
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	intcode
   636  000008                     __pintcode:
   637                           	opt stack 0
   638  000008                     _ISR_high:
   639                           	opt stack 28
   640                           
   641                           ;incstack = 0
   642  000008  821A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   643  00000A  CFFA F001          	movff	pclath,??_ISR_high
   644  00000E  CFFB F002          	movff	pclatu,??_ISR_high+1
   645  000012  CFE9 F003          	movff	fsr0l,??_ISR_high+2
   646  000016  CFEA F004          	movff	fsr0h,??_ISR_high+3
   647  00001A  CFE1 F005          	movff	fsr1l,??_ISR_high+4
   648  00001E  CFE2 F006          	movff	fsr1h,??_ISR_high+5
   649  000022  CFD9 F007          	movff	fsr2l,??_ISR_high+6
   650  000026  CFDA F008          	movff	fsr2h,??_ISR_high+7
   651  00002A  CFF3 F009          	movff	prodl,??_ISR_high+8
   652  00002E  CFF4 F00A          	movff	prodh,??_ISR_high+9
   653  000032  CFF6 F00B          	movff	tblptrl,??_ISR_high+10
   654  000036  CFF7 F00C          	movff	tblptrh,??_ISR_high+11
   655  00003A  CFF8 F00D          	movff	tblptru,??_ISR_high+12
   656  00003E  CFF5 F00E          	movff	tablat,??_ISR_high+13
   657                           
   658                           ;Main.c: 40: if(SSPIE == 1 && SSPIF == 1)
   659  000042  B69D               	btfsc	3997,3,c	;volatile
   660  000044  A69E               	btfss	3998,3,c	;volatile
   661  000046  D018               	goto	i2l75
   662                           
   663                           ;Main.c: 41: {
   664                           ;Main.c: 42: CKP = 0;
   665  000048  98C6               	bcf	4038,4,c	;volatile
   666                           
   667                           ;Main.c: 43: if(SSPOV == 1 || WCOL == 1)
   668  00004A  BCC6               	btfsc	4038,6,c	;volatile
   669  00004C  D002               	goto	i2l72
   670  00004E  AEC6               	btfss	4038,7,c	;volatile
   671  000050  D005               	goto	i2l769
   672  000052                     i2l72:
   673                           
   674                           ;Main.c: 44: {
   675                           ;Main.c: 45: i2cData = SSPBUF;
   676  000052  CFC9 F019          	movff	4041,_i2cData	;volatile
   677                           
   678                           ;Main.c: 46: SSPOV = 0;
   679  000056  9CC6               	bcf	4038,6,c	;volatile
   680                           
   681                           ;Main.c: 47: WCOL = 0;
   682  000058  9EC6               	bcf	4038,7,c	;volatile
   683                           
   684                           ;Main.c: 48: CKP = 1;
   685  00005A  88C6               	bsf	4038,4,c	;volatile
   686  00005C                     i2l769:
   687                           
   688                           ;Main.c: 49: }
   689                           ;Main.c: 51: if(SSPBUF == SSPADD)
   690  00005C  50C8               	movf	4040,w,c	;volatile
   691  00005E  18C9               	xorwf	4041,w,c	;volatile
   692  000060  A4D8               	btfss	status,2,c
   693  000062  D003               	goto	i2l73
   694                           
   695                           ;Main.c: 52: {
   696                           ;Main.c: 54: GPREG.I2CADD = 1;
   697  000064  8018               	bsf	_GPREG,0,c
   698                           
   699                           ;Main.c: 55: BF = 0;
   700  000066  90C7               	bcf	4039,0,c	;volatile
   701                           
   702                           ;Main.c: 56: CKP = 1;
   703  000068  88C6               	bsf	4038,4,c	;volatile
   704  00006A                     i2l73:
   705                           
   706                           ;Main.c: 57: }
   707                           ;Main.c: 59: if(GPREG.I2CADD == 1)
   708  00006A  A018               	btfss	_GPREG,0,c
   709  00006C  D004               	goto	i2l74
   710                           
   711                           ;Main.c: 60: {
   712                           ;Main.c: 61: i2cData = SSPBUF;
   713  00006E  CFC9 F019          	movff	4041,_i2cData	;volatile
   714                           
   715                           ;Main.c: 62: CKP = 1;
   716  000072  88C6               	bsf	4038,4,c	;volatile
   717                           
   718                           ;Main.c: 63: GPREG.I2CADD = 0;
   719  000074  9018               	bcf	_GPREG,0,c
   720  000076                     i2l74:
   721                           
   722                           ;Main.c: 64: }
   723                           ;Main.c: 65: SSPIF = 0;
   724  000076  969E               	bcf	3998,3,c	;volatile
   725  000078                     i2l75:
   726  000078  C00E  FFF5         	movff	??_ISR_high+13,tablat
   727  00007C  C00D  FFF8         	movff	??_ISR_high+12,tblptru
   728  000080  C00C  FFF7         	movff	??_ISR_high+11,tblptrh
   729  000084  C00B  FFF6         	movff	??_ISR_high+10,tblptrl
   730  000088  C00A  FFF4         	movff	??_ISR_high+9,prodh
   731  00008C  C009  FFF3         	movff	??_ISR_high+8,prodl
   732  000090  C008  FFDA         	movff	??_ISR_high+7,fsr2h
   733  000094  C007  FFD9         	movff	??_ISR_high+6,fsr2l
   734  000098  C006  FFE2         	movff	??_ISR_high+5,fsr1h
   735  00009C  C005  FFE1         	movff	??_ISR_high+4,fsr1l
   736  0000A0  C004  FFEA         	movff	??_ISR_high+3,fsr0h
   737  0000A4  C003  FFE9         	movff	??_ISR_high+2,fsr0l
   738  0000A8  C002  FFFB         	movff	??_ISR_high+1,pclatu
   739  0000AC  C001  FFFA         	movff	??_ISR_high,pclath
   740  0000B0  921A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   741  0000B2  0011               	retfie		f
   742  0000B4                     __end_of_ISR_high:
   743                           	opt stack 0
   744  0000                     pclatu	equ	0xFFB
   745                           pclath	equ	0xFFA
   746                           tblptru	equ	0xFF8
   747                           tblptrh	equ	0xFF7
   748                           tblptrl	equ	0xFF6
   749                           tablat	equ	0xFF5
   750                           prodh	equ	0xFF4
   751                           prodl	equ	0xFF3
   752                           intcon	equ	0xFF2
   753                           fsr0h	equ	0xFEA
   754                           fsr0l	equ	0xFE9
   755                           fsr1h	equ	0xFE2
   756                           fsr1l	equ	0xFE1
   757                           fsr2h	equ	0xFDA
   758                           fsr2l	equ	0xFD9
   759                           status	equ	0xFD8
   760                           pclatu	equ	0xFFB
   761                           pclath	equ	0xFFA
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           prodh	equ	0xFF4
   767                           prodl	equ	0xFF3
   768                           intcon	equ	0xFF2
   769                           fsr0h	equ	0xFEA
   770                           fsr0l	equ	0xFE9
   771                           fsr1h	equ	0xFE2
   772                           fsr1l	equ	0xFE1
   773                           fsr2h	equ	0xFDA
   774                           fsr2l	equ	0xFD9
   775                           status	equ	0xFD8
   776                           
   777                           	psect	rparam
   778  0000                     pclatu	equ	0xFFB
   779                           pclath	equ	0xFFA
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           prodh	equ	0xFF4
   785                           prodl	equ	0xFF3
   786                           intcon	equ	0xFF2
   787                           fsr0h	equ	0xFEA
   788                           fsr0l	equ	0xFE9
   789                           fsr1h	equ	0xFE2
   790                           fsr1l	equ	0xFE1
   791                           fsr2h	equ	0xFDA
   792                           fsr2l	equ	0xFD9
   793                           status	equ	0xFD8
   794                           
   795                           	psect	temp
   796  00001A                     btemp:
   797                           	opt stack 0
   798  00001A                     	ds	1
   799  0000                     int$flags	set	btemp
   800                           pclatu	equ	0xFFB
   801                           pclath	equ	0xFFA
   802                           tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           prodh	equ	0xFF4
   807                           prodl	equ	0xFF3
   808                           intcon	equ	0xFF2
   809                           fsr0h	equ	0xFEA
   810                           fsr0l	equ	0xFE9
   811                           fsr1h	equ	0xFE2
   812                           fsr1l	equ	0xFE1
   813                           fsr2h	equ	0xFDA
   814                           fsr2l	equ	0xFD9
   815                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_write_PWMF
    _write_PWMF->___awdiv

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     494
                  _enable_Interrupts
                          _init_GPIO
                        _init_PERIPH
                    _routineSelector
                         _write_PWMF
 ---------------------------------------------------------------------------------
 (1) _write_PWMF                                           1     1      0     494
                                             22 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     472
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _routineSelector                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PERIPH                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_Interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_high                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enable_Interrupts
   _init_GPIO
   _init_PERIPH
   _routineSelector
   _write_PWMF
     ___awdiv

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2EE      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            EF      0       0       8        0.0%
BANK2               EF      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      19       1       26.6%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19       5        0.0%
DATA                 0      0      19      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Mar 23 22:07:22 2018

                        _BF 007E38                ___awdiv@sign 0014                __CFG_CP0$OFF 000000  
              __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000  
               __CFG_OSC$RC 000000                         l801 00CC                         l813 00F2  
                       l815 00FA                         l807 00DC                         l833 0132  
                       l825 011A                         l817 00FE                         l851 0178  
                       l829 0124                         _CKP 007E34                         _GIE 007F97  
              __CFG_CPB$OFF 000000                         _RC1 007C11                         _RC2 007C12  
                       _PR2 000FCB                __CFG_CPD$OFF 000000                __CFG_IESO$ON 000000  
              __CFG_LVP$OFF 000000                        _IPEN 007E87                        i2l72 0052  
                      i2l73 006A                        i2l74 0076                        i2l75 0078  
                      _WCOL 007E37               __CFG_FCMEN$ON 000000                        _main 0166  
                      fsr0h 000FEA                        fsr1h 000FE2                        fsr0l 000FE9  
                      fsr2h 000FDA                        fsr1l 000FE1                        fsr2l 000FD9  
                      btemp 001A                        pclat 000FFA               __CFG_BOREN$ON 000000  
                      prodh 000FF4                        prodl 000FF3                        start 00B4  
              ?_init_PERIPH 0001               __CFG_MCLRE$ON 000000                ___param_bank 000010  
                     ?_main 0001             __end_of___awdiv 013C             ___awdiv@divisor 0011  
                     _T2CON 000FCA                       _LATC1 007C59                       _LATC2 007C5A  
                     _GPREG 0018                       i2l769 005C             ___awdiv@counter 0013  
                     _SSPIE 007CEB                       _SSPIF 007CF3                       _SSPIP 007CFB  
                     _SSPOV 007E36               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
          __end_of_ISR_high 00B4               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000                       tablat 000FF5  
                     status 000FD8             __initialization 0190              __CFG_HPOL$HIGH 000000  
              __end_of_main 017E              __CFG_LPOL$HIGH 000000                      ??_main 0018  
             __activetblptr 000000                      _CCPR1L 000FBE                      _CCPR2L 000FBB  
          ___awdiv@dividend 000F              __CFG_WDTEN$OFF 000000              __CFG_WINEN$OFF 000000  
                    _SSPADD 000FC8                      _TRISC1 007CA1                      _TRISC2 007CA2  
                    _TRISD2 007CAA                      _TRISD3 007CAB                      _SSPCON 000FC6  
                    _SSPBUF 000FC9              __CFG_SSPMX$RC7 000000                   ??___awdiv 0013  
            __CFG_STVREN$ON 000000            ___awdiv@quotient 0015                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                  __accesstop 0060  
   __end_of__initialization 0194             __CFG_FLTAMX$RC1 000000               ___rparam_used 000001  
           __CFG_T1OSCMX$ON 000000              __pcstackCOMRAM 0001        __size_of_init_PERIPH 000E  
                 ?_ISR_high 0001           _enable_Interrupts 01AC          ?_enable_Interrupts 0001  
       ??_enable_Interrupts 000F          __size_of_init_GPIO 0012                  ??_ISR_high 0001  
 __end_of_enable_Interrupts 01B6             __CFG_WDPS$32768 000000                     _CCP1CON 000FBD  
                   _CCP2CON 000FBA    __size_of_routineSelector 0008             __CFG_PWM4MX$RB5 000000  
           __CFG_PWMPIN$OFF 000000                     _i2cData 0019             __CFG_PWRTEN$OFF 000000  
                   __Hparam 0000                     __Lparam 0000                     ___awdiv 00B8  
                   __pcinit 0190                     __ramtop 0300                     __ptext0 0166  
                   __ptext1 013C                     __ptext2 00B8                     __ptext3 01B6  
                   __ptext4 019E                     __ptext5 017E                     __ptext6 01AC  
         __end_of_init_GPIO 0190        end_of_initialization 0194  __size_of_enable_Interrupts 000A  
         ??_routineSelector 000F                  _write_PWMF 013C            __CFG_EXCLKMX$RC3 000000  
         __size_of_ISR_high 00AC         start_initialization 0190               ??_init_PERIPH 000F  
               __pbssCOMRAM 0018                   __pintcode 0008                    ?___awdiv 000F  
               ?_write_PWMF 0001         __end_of_init_PERIPH 01AC                   _init_GPIO 017E  
                  _ISR_high 0008             _routineSelector 01B6                  ?_init_GPIO 0001  
       __size_of_write_PWMF 002A                    __Hrparam 0000                 _init_PERIPH 019E  
                  __Lrparam 0000            __size_of___awdiv 0084               __size_of_main 0018  
   __end_of_routineSelector 01BE                    int$flags 001A                 ??_init_GPIO 000F  
                  intlevel2 0000                ??_write_PWMF 0017         write_PWMF@dutyCycle 0017  
        __end_of_write_PWMF 0166            ?_routineSelector 0001  
